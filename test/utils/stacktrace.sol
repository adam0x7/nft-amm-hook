// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

Traces:
[22513266] NFTAMMHookTest::setUp()
├─ [4428366] → new PoolManager@0x2a9e8fa175F45b235efDdD97d2727741EF4Eee63
│   ├─ emit OwnerChanged(oldOwner: 0x0000000000000000000000000000000000000000, newOwner: NFTAMMHookTest: [0x34A1D3fff3958843C43aD80F30b94c510645C316])
│   └─ ← [Return] 21997 bytes of code
├─ [1637957] → new PoolSwapTest@0x72384992222BE015DE0146a6D7E5dA0E19d2Ba49
│   └─ ← [Return] 7958 bytes of code
├─ [1553236] → new PoolModifyLiquidityTest@0x08526067985167EcFcB1F9720C72DbBF36c96018
│   └─ ← [Return] 7535 bytes of code
├─ [1473147] → new PoolDonateTest@0x0F8458E544c9D4C7C25A881240727209caae20B8
│   └─ ← [Return] 7135 bytes of code
├─ [1335988] → new PoolTakeTest@0x4d04375eCD86c2B81eb0F55B37aA3fAb41CeCBc4
│   └─ ← [Return] 6450 bytes of code
├─ [1235080] → new PoolClaimsTest@0x7b0AA1e6Fcd181d45C94ac62901722231074d8d4
│   └─ ← [Return] 5946 bytes of code
├─ [3643909] → new PoolNestedActionsTest@0x87B2d08110B7D50861141D7bBDd49326af3Ecb31
│   ├─ [2596021] → new NestedActionExecutor@0x7565Aef10F626C1972cd51B4A951b0601917940E
│   │   └─ ← [Return] 11636 bytes of code
│   └─ ← [Return] 4614 bytes of code
├─ [141988] → new ProtocolFeeControllerTest@0x26aFF6f249fDF81492cA987e78f1146296c727b4
│   └─ ← [Return] 709 bytes of code
├─ [73321] → new RevertingProtocolFeeControllerTest@0x0F4ee068d0b31250a2BC9A1Fe4Ccc18431920cad
│   └─ ← [Return] 366 bytes of code
├─ [74721] → new OutOfBoundsProtocolFeeControllerTest@0x24c20C0B0F62358b3C857A62Dc3730f2dAA352B6
│   └─ ← [Return] 373 bytes of code
├─ [77727] → new OverflowProtocolFeeControllerTest@0x7F1f3E02E4B20b47e5E6b3b54893F335D3A41dc1
│   └─ ← [Return] 388 bytes of code
├─ [78727] → new InvalidReturnSizeProtocolFeeControllerTest@0x90864f26550e943C4De85788Bd486C13C1cd5C02
│   └─ ← [Return] 393 bytes of code
├─ [23701] PoolManager::setProtocolFeeController(ProtocolFeeControllerTest: [0x26aFF6f249fDF81492cA987e78f1146296c727b4])
│   ├─ emit ProtocolFeeControllerUpdated(protocolFeeController: ProtocolFeeControllerTest: [0x26aFF6f249fDF81492cA987e78f1146296c727b4])
│   └─ ← [Stop]
├─ [0] VM::prank(0x0000000000000000000000000000000000000001)
│   └─ ← [Return]
├─ [47122] MockERC721::safeMint(0x0000000000000000000000000000000000000001, 0)
│   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000000001, tokenId: 0)
│   └─ ← [Stop]
├─ [0] VM::prank(0x0000000000000000000000000000000000000001)
│   └─ ← [Return]
├─ [25222] MockERC721::safeMint(0x0000000000000000000000000000000000000001, 1)
│   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000000001, tokenId: 1)
│   └─ ← [Stop]
├─ [0] VM::prank(0x0000000000000000000000000000000000000001)
│   └─ ← [Return]
├─ [25222] MockERC721::safeMint(0x0000000000000000000000000000000000000001, 2)
│   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000000001, tokenId: 2)
│   └─ ← [Stop]
├─ [0] VM::prank(0x0000000000000000000000000000000000000001)
│   └─ ← [Return]
├─ [25222] MockERC721::safeMint(0x0000000000000000000000000000000000000001, 3)
│   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000000001, tokenId: 3)
│   └─ ← [Stop]
├─ [0] VM::prank(0x0000000000000000000000000000000000000001)
│   └─ ← [Return]
├─ [25222] MockERC721::safeMint(0x0000000000000000000000000000000000000001, 4)
│   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000000001, tokenId: 4)
│   └─ ← [Stop]
├─ [3671428] HookMiner::find(NFTAMMHookTest: [0x34A1D3fff3958843C43aD80F30b94c510645C316], 17126972312471518572699431633393941636592959488 [1.712e46], 0, 0x610100604052348015610010575f80fd5b50604051612c11380380612c1183398101604081905261002f916104ed565b858585835f61003e8482610617565b50600161004b8382610617565b5060ff81166080524660a05261005f6100b0565b60c0525050506001600160a01b03811660e05261007b30610148565b505f600a55600680546001600160a01b0319166001600160a01b0384161790556100a530846101fb565b505050505050610767565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f5f6040516100e091906106d6565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6101f8816101f360408051610140810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091525060408051610140810182525f80825260208201819052918101829052606081018290526080810182905260a08101829052600160c0820181905260e0820152610100810182905261012081019190915290565b610264565b50565b8060025f82825461020c9190610748565b90915550506001600160a01b0382165f818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b61027b6001600160a01b0383166001609f1b610428565b815115159015151415806102ad57506102a16001600160a01b0383166001609e1b610428565b15158160200151151514155b806102d657506102ca6001600160a01b0383166001609d1b610428565b15158160400151151514155b806102ff57506102f36001600160a01b0383166001609c1b610428565b15158160600151151514155b80610328575061031c6001600160a01b0383166001609b1b610428565b15158160800151151514155b8061035157506103456001600160a01b0383166001609a1b610428565b15158160a00151151514155b8061037a575061036e6001600160a01b038316600160991b610428565b15158160c00151151514155b806103a357506103976001600160a01b038316600160981b610428565b15158160e00151151514155b806103cd57506103c06001600160a01b038316600160971b610428565b1515816101000151151514155b806103f757506103ea6001600160a01b038316600160961b610428565b1515816101200151151514155b1561042457604051630732d7b560e51b81526001600160a01b038316600482015260240160405180910390fd5b5050565b8181166001600160a01b031615155b92915050565b6001600160a01b03811681146101f8575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610474575f80fd5b81516001600160401b038082111561048e5761048e610451565b604051601f8301601f19908116603f011681019082821181831017156104b6576104b6610451565b816040528381528660208588010111156104ce575f80fd5b8360208701602083015e5f602085830101528094505050505092915050565b5f805f805f8060c08789031215610502575f80fd5b865161050d8161043d565b60208801519096506001600160401b0380821115610529575f80fd5b6105358a838b01610465565b9650604089015191508082111561054a575f80fd5b5061055789828a01610465565b94505060608701519250608087015161056f8161043d565b60a088015190925060ff81168114610585575f80fd5b809150509295509295509295565b600181811c908216806105a757607f821691505b6020821081036105c557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561061257805f5260205f20601f840160051c810160208510156105f05750805b601f840160051c820191505b8181101561060f575f81556001016105fc565b50505b505050565b81516001600160401b0381111561063057610630610451565b6106448161063e8454610593565b846105cb565b602080601f831160018114610677575f84156106605750858301515b5f19600386901b1c1916600185901b1785556106ce565b5f85815260208120601f198616915b828110156106a557888601518255948401946001909101908401610686565b50858210156106c257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f8083546106e381610593565b600182811680156106fb57600181146107105761073c565b60ff198416875282151583028701945061073c565b875f526020805f205f5b858110156107335781548a82015290840190820161071a565b50505082870194505b50929695505050505050565b8082018082111561043757634e487b7160e01b5f52601160045260245ffd5b60805160a05160c05160e0516124696107a85f395f81816107460152818161103f015261112001525f610a1201525f6109dd01525f61032301526124695ff3fe6080604052600436106101fc575f3560e01c80638561fc8711610113578063b6a8b0fa1161009d578063dc4c90d31161006d578063dc4c90d314610735578063dc9d811914610768578063dd62ed3e14610787578063e1b4af691461063c578063fb71a19d146107bd575f80fd5b8063b6a8b0fa1461063c578063c3d5d4e614610622578063c4e833ce14610656578063d505accf14610716575f80fd5b8063a9059cbb116100e3578063a9059cbb146105ab578063a910f80f146105ca578063ab6291fe146105e4578063b47b2fb114610603578063b505b4ce14610622575f80fd5b80638561fc87146104b15780638a355601146104d057806395d89b4114610597578063a6ab2a43146102f3575f80fd5b80633440d820116101945780635f6d5da5116101645780635f6d5da5146103db578063601a9baf146103f057806370a082311461043c5780637e8ec267146104675780637ecebe0014610486575f80fd5b80633440d820146103575780633644e515146103715780634d4edc6714610385578063575e24b4146103b0575f80fd5b806318160ddd116101cf57806318160ddd146102bf57806323b872dd146102d45780632b58404e146102f3578063313ce56714610312575f80fd5b806306fdde0314610200578063095ea7b31461022a578063150b7a0214610259578063163de5e51461029c575b5f80fd5b34801561020b575f80fd5b506102146107dc565b6040516102219190611b2d565b60405180910390f35b348015610235575f80fd5b50610249610244366004611b5d565b610867565b6040519015158152602001610221565b348015610264575f80fd5b50610283610273366004611b9b565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610221565b3480156102a7575f80fd5b506102b1600a5481565b604051908152602001610221565b3480156102ca575f80fd5b506102b160025481565b3480156102df575f80fd5b506102496102ee366004611c74565b6108d3565b3480156102fe575f80fd5b5061028361030d366004611d1d565b6109c0565b34801561031d575f80fd5b506103457f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610221565b348015610362575f80fd5b5061028361030d366004611d94565b34801561037c575f80fd5b506102b16109da565b348015610390575f80fd5b506102b161039f366004611dee565b60096020525f908152604090205481565b3480156103bb575f80fd5b506102836103ca366004611d1d565b6315d7892d60e21b95945050505050565b6103ee6103e9366004611e1f565b610a34565b005b3480156103fb575f80fd5b5061042461040a366004611ed9565b60076020525f90815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610221565b348015610447575f80fd5b506102b1610456366004611dee565b60036020525f908152604090205481565b348015610472575f80fd5b506102b1610481366004611ef0565b610f1e565b348015610491575f80fd5b506102b16104a0366004611dee565b60056020525f908152604090205481565b3480156104bc575f80fd5b506102b16104cb366004611ef0565b610f6c565b3480156104db575f80fd5b506105496104ea366004611b5d565b600860209081525f92835260408084209091529082529020805460018201546002808401546003850154600486015460059096015485840b9663010000008704850b966601000000000000900490940b9493906001600160a01b031688565b604080516002998a0b815297890b60208901529590970b948601949094526060850192909252608084015260a083015260c08201526001600160a01b0390911660e082015261010001610221565b3480156105a2575f80fd5b50610214610faf565b3480156105b6575f80fd5b506102496105c5366004611b5d565b610fbc565b3480156105d5575f80fd5b5061028361030d366004611f19565b3480156105ef575f80fd5b506102146105fe366004611fa1565b611032565b34801561060e575f80fd5b5061028361061d366004611fe0565b611114565b34801561062d575f80fd5b5061028361030d366004611fe0565b348015610647575f80fd5b5061028361030d366004612043565b348015610661575f80fd5b5061070960408051610140810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091525060408051610140810182525f80825260208201819052918101829052606081018290526080810182905260a08101829052600160c0820181905260e0820152610100810182905261012081019190915290565b604051610221919061209d565b348015610721575f80fd5b506103ee610730366004612155565b611171565b348015610740575f80fd5b506104247f000000000000000000000000000000000000000000000000000000000000000081565b348015610773575f80fd5b506102b16107823660046121c6565b6113af565b348015610792575f80fd5b506102b16107a13660046121df565b600460209081525f928352604080842090915290825290205481565b3480156107c8575f80fd5b506102496107d7366004612216565b61146c565b5f80546107e89061224c565b80601f01602080910402602001604051908101604052809291908181526020018280546108149061224c565b801561085f5780601f106108365761010080835404028352916020019161085f565b820191905f5260205f20905b81548152906001019060200180831161084257829003601f168201915b505050505081565b335f8181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906108c19086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383165f9081526004602090815260408083203384529091528120545f19811461092c576109088382612292565b6001600160a01b0386165f9081526004602090815260408083203384529091529020555b6001600160a01b0385165f9081526003602052604081208054859290610953908490612292565b90915550506001600160a01b038085165f81815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109ad9087815260200190565b60405180910390a3506001949350505050565b5f604051630a85dc2960e01b815260040160405180910390fd5b5f7f00000000000000000000000000000000000000000000000000000000000000004614610a0f57610a0a611522565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6006546001600160a01b03898116911614610a965760405162461bcd60e51b815260206004820152601760248201527f436f6c6c656374696f6e20697320696e636f727265637400000000000000000060448201526064015b60405180910390fd5b33610aee5760405162461bcd60e51b815260206004820152602260248201527f6d73672e73656e646572206973206e6f7420746865207a65726f206164647265604482015261737360f01b6064820152608401610a8d565b8660020b8660020b13610b575760405162461bcd60e51b815260206004820152602b60248201527f73656c6c207469636b206973206c657373207468616e206f7220657175616c2060448201526a746f20627579207469636b60a81b6064820152608401610a8d565b610b638684833461146c565b610baf5760405162461bcd60e51b815260206004820152601760248201527f7468657265206973206e6f7420656e6f756768206574680000000000000000006044820152606401610a8d565b600a8054905f610bbe836122a5565b9091555050335f908152600860209081526040808320600a5484529091528120905b85811015610c4b575f610bf48987846115ba565b90508060075f8a8a86818110610c0c57610c0c6122bd565b602090810292909201358352508101919091526040015f2080546001600160a01b0319166001600160a01b039290921691909117905550600101610be0565b50805468ffffffffffffffffff1916630100000062ffffff8a81169190910268ffffff000000ffffff191691909117908816908117660100000000000091909102178155346001820155600281018290556003810184905560048082018490556005820180546001600160a01b0319166001600160a01b038c811691909117909155604080518082018252601a81527f53454e4445522042414c414e4345204245464f52452048414e44000000000000602082015260065491516370a0823160e01b81523394810194909452610d7093909291909116906370a08231906024015b602060405180830381865afa158015610d47573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d6b91906122d1565b6116ab565b5f5b85811015610e5557610dba60405180604001604052806006815260200165746f6b656e7360d01b815250888884818110610dae57610dae6122bd565b905060200201356116ab565b6006546001600160a01b03166342842e0e33308a8a86818110610ddf57610ddf6122bd565b6040516001600160e01b031960e088901b1681526001600160a01b039586166004820152949093166024850152506020909102013560448201526064015f604051808303815f87803b158015610e33575f80fd5b505af1158015610e45573d5f803e3d5ffd5b505060019092019150610d729050565b50604080518082018252600c81526b27232a102120a620a721a29d60a11b602082015260065491516370a0823160e01b8152306004820152610ea9926001600160a01b0316906370a0823190602401610d2c565b604080518082018252600f81526e29a2a72222a9102120a620a721a29d60891b602082015260065491516370a0823160e01b8152336004820152610eff926001600160a01b0316906370a0823190602401610d2c565b610f13610f0b886116f4565b878787611a0f565b505050505050505050565b5f8084815b84811015610f6157610f3582846122e8565b92506064610f4387826122e8565b610f4d90846122fb565b610f579190612326565b9150600101610f23565b509095945050505050565b5f8084815b84811015610f6157610f8382846122e8565b92506064610f918782612292565b610f9b90846122fb565b610fa59190612326565b9150600101610f71565b600180546107e89061224c565b335f90815260036020526040812080548391908390610fdc908490612292565b90915550506001600160a01b0383165f81815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108c19086815260200190565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461107d5760405163570c108560e11b815260040160405180910390fd5b5f80306001600160a01b03168585604051611099929190612345565b5f604051808303815f865af19150503d805f81146110d2576040519150601f19603f3d011682016040523d82523d5f602084013e6110d7565b606091505b509150915081156110eb5791506108cd9050565b80515f0361110c576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b5f336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461115e5760405163570c108560e11b815260040160405180910390fd5b5063b47b2fb160e01b9695505050505050565b428410156111c15760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610a8d565b5f60016111cc6109da565b6001600160a01b038a81165f8181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f1981840301815282825280516020918201205f84529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156112d4573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b0381161580159061130a5750876001600160a01b0316816001600160a01b0316145b6113475760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610a8d565b6001600160a01b039081165f9081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b5f620d89e719600283900b128015906113da57506113d0620d89e719612354565b60020b8260020b13155b61141d5760405162461bcd60e51b81526020600482015260146024820152735469636b206973206f7574206f662072616e676560601b6044820152606401610a8d565b5f611427836116f4565b90505f606061143f6001600160a01b038416806122fb565b901c9050600160601b61145a670de0b6b3a7640000836122fb565b6114649190612326565b949350505050565b5f8082116114a55760405162461bcd60e51b815260206004820152600660248201526509c9e408aa8960d31b6044820152606401610a8d565b5f806114b0876113af565b90505f816114c686678ac7230489e800006122fb565b6114d091906122fb565b90505f5b86811015611512576114e683856122e8565b935060646114f48982612292565b6114fe90856122fb565b6115089190612326565b92506001016114d4565b5091909110159695505050505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f5f6040516115529190612374565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b5f620d89e719600285900b128015906115e557506115db620d89e719612354565b60020b8460020b13155b6116285760405162461bcd60e51b81526020600482015260146024820152735469636b206973206f7574206f662072616e676560601b6044820152606401610a8d565b5f611632856116f4565b90505f5b83811015611673575f606461164b8782612292565b61165e906001600160a01b0386166122fb565b6116689190612326565b925050600101611636565b506114646040518060400160405280601081526020016f46696e616c207371727420707269636560801b815250826001600160a01b03165b6116f082826040516024016116c1929190612412565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611adf565b5050565b5f805f8360020b12611709578260020b611710565b8260020b5f035b9050620d89e8811115611736576040516333a3bdff60e21b815260040160405180910390fd5b5f816001165f0361174b57600160801b61175d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611791576ffff97272373d413259a46990580e213a0260801c5b60048216156117b0576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156117cf576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156117ee576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561180d576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561182c576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561184b576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561186b576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561188b576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156118ab576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156118cb576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156118eb576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561190b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561192b576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561194b576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561196c576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561198c576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156119ab576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156119c8576b048a170391f7dc42444e8fa20260801c5b5f8460020b13156119e757805f19816119e3576119e3612312565b0490505b6401000000008106156119fb5760016119fd565b5f5b60ff16602082901c0192505050919050565b5f6060611a256001600160a01b038716806122fb565b901c90505f81815b85811015611a6b57611a3f82846122e8565b92506064611a4d8682612292565b611a5790846122fb565b611a619190612326565b9150600101611a2d565b505f611a7f670de0b6b3a764000084612326565b9050611ab26040518060400160405280600f81526020016e746f74616c206574682076616c756560881b815250826116ab565b335f9081526009602052604081208054839290611ad09084906122e8565b90915550505050505050505050565b80516a636f6e736f6c652e6c6f67602083015f808483855afa5050505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f611b3f6020830184611aff565b9392505050565b6001600160a01b0381168114611b5a575f80fd5b50565b5f8060408385031215611b6e575f80fd5b8235611b7981611b46565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215611bae575f80fd5b8435611bb981611b46565b93506020850135611bc981611b46565b925060408501359150606085013567ffffffffffffffff80821115611bec575f80fd5b818701915087601f830112611bff575f80fd5b813581811115611c1157611c11611b87565b604051601f8201601f19908116603f01168101908382118183101715611c3957611c39611b87565b816040528281528a6020848701011115611c51575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f805f60608486031215611c86575f80fd5b8335611c9181611b46565b92506020840135611ca181611b46565b929592945050506040919091013590565b5f60a08284031215611cc2575f80fd5b50919050565b5f60608284031215611cc2575f80fd5b5f8083601f840112611ce8575f80fd5b50813567ffffffffffffffff811115611cff575f80fd5b602083019150836020828501011115611d16575f80fd5b9250929050565b5f805f805f6101408688031215611d32575f80fd5b8535611d3d81611b46565b9450611d4c8760208801611cb2565b9350611d5b8760c08801611cc8565b925061012086013567ffffffffffffffff811115611d77575f80fd5b611d8388828901611cd8565b969995985093965092949392505050565b5f805f805f6101008688031215611da9575f80fd5b8535611db481611b46565b9450611dc38760208801611cb2565b935060c0860135611dd381611b46565b925060e086013567ffffffffffffffff811115611d77575f80fd5b5f60208284031215611dfe575f80fd5b8135611b3f81611b46565b8035600281900b8114611e1a575f80fd5b919050565b5f805f805f805f8060e0898b031215611e36575f80fd5b8835611e4181611b46565b9750611e4f60208a01611e09565b9650611e5d60408a01611e09565b9550606089013567ffffffffffffffff80821115611e79575f80fd5b818b0191508b601f830112611e8c575f80fd5b813581811115611e9a575f80fd5b8c60208260051b8501011115611eae575f80fd5b999c989b50969960209190910198976080820135975060a0820135965060c090910135945092505050565b5f60208284031215611ee9575f80fd5b5035919050565b5f805f60608486031215611f02575f80fd5b505081359360208301359350604090920135919050565b5f805f805f806101208789031215611f2f575f80fd5b8635611f3a81611b46565b9550611f498860208901611cb2565b945060c0870135611f5981611b46565b9350611f6760e08801611e09565b925061010087013567ffffffffffffffff811115611f83575f80fd5b611f8f89828a01611cd8565b979a9699509497509295939492505050565b5f8060208385031215611fb2575f80fd5b823567ffffffffffffffff811115611fc8575f80fd5b611fd485828601611cd8565b90969095509350505050565b5f805f805f806101608789031215611ff6575f80fd5b863561200181611b46565b95506120108860208901611cb2565b945061201f8860c08901611cc8565b9350610120870135925061014087013567ffffffffffffffff811115611f83575f80fd5b5f805f805f806101208789031215612059575f80fd5b863561206481611b46565b95506120738860208901611cb2565b945060c0870135935060e0870135925061010087013567ffffffffffffffff811115611f83575f80fd5b815115158152610140810160208301516120bb602084018215159052565b5060408301516120cf604084018215159052565b5060608301516120e3606084018215159052565b5060808301516120f7608084018215159052565b5060a083015161210b60a084018215159052565b5060c083015161211f60c084018215159052565b5060e083015161213360e084018215159052565b5061010083810151151590830152610120928301511515929091019190915290565b5f805f805f805f60e0888a03121561216b575f80fd5b873561217681611b46565b9650602088013561218681611b46565b95506040880135945060608801359350608088013560ff811681146121a9575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f602082840312156121d6575f80fd5b611b3f82611e09565b5f80604083850312156121f0575f80fd5b82356121fb81611b46565b9150602083013561220b81611b46565b809150509250929050565b5f805f8060808587031215612229575f80fd5b61223285611e09565b966020860135965060408601359560600135945092505050565b600181811c9082168061226057607f821691505b602082108103611cc257634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156108cd576108cd61227e565b5f600182016122b6576122b661227e565b5060010190565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156122e1575f80fd5b5051919050565b808201808211156108cd576108cd61227e565b80820281158282048414176108cd576108cd61227e565b634e487b7160e01b5f52601260045260245ffd5b5f8261234057634e487b7160e01b5f52601260045260245ffd5b500490565b818382375f9101908152919050565b5f8160020b627fffff19810361236c5761236c61227e565b5f0392915050565b5f8083545f60018260011c9150600183168061239157607f831692505b602080841082036123b057634e487b7160e01b5f52602260045260245ffd5b8180156123c457600181146123d957612404565b60ff1986168952841515850289019650612404565b5f8a8152602090205f5b868110156123fc5781548b8201529085019083016123e3565b505084890196505b509498975050505050505050565b604081525f6124246040830185611aff565b9050826020830152939250505056fea2646970667358221220f88e6e2bda0d2a43616561ddbfc923ec2e460cca37f9949baafdb0121b95834864736f6c63430008190033, 0x0000000000000000000000002a9e8fa175f45b235efddd97d2727741ef4eee6300000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000fefc6baf87cf3684058d62da40ff3a795946ab060000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000d5772617070656420546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c544553545f575241505045440000000000000000000000000000000000000000) [delegatecall]
│   └─ ← [Return] NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 0x0000000000000000000000000000000000000000000000000000000000000565
├─ [1985751] → new NFTAMMHook@0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa
│   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], value: 100000000 [1e8])
│   └─ ← [Return] 9321 bytes of code
├─ [0] VM::deal(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 10000000000000000000000000000000000000000000 [1e43])
│   └─ ← [Return]
├─ [24560] NFTAMMHook::approve(PoolSwapTest: [0x72384992222BE015DE0146a6D7E5dA0E19d2Ba49], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
│   ├─ emit Approval(owner: NFTAMMHookTest: [0x34A1D3fff3958843C43aD80F30b94c510645C316], spender: PoolSwapTest: [0x72384992222BE015DE0146a6D7E5dA0E19d2Ba49], value: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
│   └─ ← [Return] true
├─ [24560] NFTAMMHook::approve(PoolModifyLiquidityTest: [0x08526067985167EcFcB1F9720C72DbBF36c96018], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
│   ├─ emit Approval(owner: NFTAMMHookTest: [0x34A1D3fff3958843C43aD80F30b94c510645C316], spender: PoolModifyLiquidityTest: [0x08526067985167EcFcB1F9720C72DbBF36c96018], value: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
│   └─ ← [Return] true
├─ [35209] PoolManager::initialize(PoolKey({ currency0: 0x0000000000000000000000000000000000000000, currency1: 0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa, fee: 3000, tickSpacing: 60, hooks: 0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa }), 79228162514264337593543950336 [7.922e28], 0x)
│   ├─ [3421] ProtocolFeeControllerTest::protocolFeeForPool(PoolKey({ currency0: 0x0000000000000000000000000000000000000000, currency1: 0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa, fee: 3000, tickSpacing: 60, hooks: 0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa }))
│   │   └─ ← [Return] 0
│   ├─ emit Initialize(id: 0x0071d3ec715494cf489ab0d42d8242aff765e5bb1a7cb25d9f659cd9d8ad858b, currency0: 0x0000000000000000000000000000000000000000, currency1: NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], fee: 3000, tickSpacing: 60, hooks: NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa])
│   └─ ← [Return] 0
└─ ← [Stop]

[766276] NFTAMMHookTest::testMarketOrderCreation()
├─ [2630] MockERC721::balanceOf(0x0000000000000000000000000000000000000001) [staticcall]
│   └─ ← [Return] 5
├─ [0] VM::deal(0x0000000000000000000000000000000000000001, 10000000000000000000 [1e19])
│   └─ ← [Return]
├─ [0] VM::prank(0x0000000000000000000000000000000000000001)
│   └─ ← [Return]
├─ [24526] MockERC721::setApprovalForAll(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], true)
│   ├─ emit ApprovalForAll(owner: 0x0000000000000000000000000000000000000001, operator: NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], approved: true)
│   └─ ← [Stop]
├─ [0] VM::prank(0x0000000000000000000000000000000000000001)
│   └─ ← [Return]
├─ [413272] NFTAMMHook::marketMake{value: 5}(MockERC721: [0xFEfC6BAF87cF3684058D62Da40Ff3A795946Ab06], -60, 60, [0, 1, 2, 3, 4], 10, 20, 5)
│   ├─ [0] console::log("Final sqrt price", 79466191966197645195421774833 [7.946e28]) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [0] console::log("Final sqrt price", 71519572769577880675879597349 [7.151e28]) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [0] console::log("Final sqrt price", 64367615492620092608291637614 [6.436e28]) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [0] console::log("Final sqrt price", 57930853943358083347462473852 [5.793e28]) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [0] console::log("Final sqrt price", 52137768549022275012716226466 [5.213e28]) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [630] MockERC721::balanceOf(0x0000000000000000000000000000000000000001) [staticcall]
│   │   └─ ← [Return] 5
│   ├─ [0] console::log("SENDER BALANCE BEFORE HAND", 5) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [0] console::log("tokens", 0) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [37347] MockERC721::safeTransferFrom(0x0000000000000000000000000000000000000001, NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 0)
│   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000001, to: NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], tokenId: 0)
│   │   ├─ [924] NFTAMMHook::onERC721Received(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 0x0000000000000000000000000000000000000001, 0, 0x)
│   │   │   └─ ← [Return] 0x150b7a0200000000000000000000000000000000000000000000000000000000
│   │   └─ ← [Stop]
│   ├─ [0] console::log("tokens", 1) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [12647] MockERC721::safeTransferFrom(0x0000000000000000000000000000000000000001, NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 1)
│   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000001, to: NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], tokenId: 1)
│   │   ├─ [924] NFTAMMHook::onERC721Received(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 0x0000000000000000000000000000000000000001, 1, 0x)
│   │   │   └─ ← [Return] 0x150b7a0200000000000000000000000000000000000000000000000000000000
│   │   └─ ← [Stop]
│   ├─ [0] console::log("tokens", 2) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [12647] MockERC721::safeTransferFrom(0x0000000000000000000000000000000000000001, NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 2)
│   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000001, to: NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], tokenId: 2)
│   │   ├─ [924] NFTAMMHook::onERC721Received(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 0x0000000000000000000000000000000000000001, 2, 0x)
│   │   │   └─ ← [Return] 0x150b7a0200000000000000000000000000000000000000000000000000000000
│   │   └─ ← [Stop]
│   ├─ [0] console::log("tokens", 3) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [12647] MockERC721::safeTransferFrom(0x0000000000000000000000000000000000000001, NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 3)
│   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000001, to: NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], tokenId: 3)
│   │   ├─ [924] NFTAMMHook::onERC721Received(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 0x0000000000000000000000000000000000000001, 3, 0x)
│   │   │   └─ ← [Return] 0x150b7a0200000000000000000000000000000000000000000000000000000000
│   │   └─ ← [Stop]
│   ├─ [0] console::log("tokens", 4) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [12647] MockERC721::safeTransferFrom(0x0000000000000000000000000000000000000001, NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 4)
│   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000001, to: NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], tokenId: 4)
│   │   ├─ [924] NFTAMMHook::onERC721Received(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], 0x0000000000000000000000000000000000000001, 4, 0x)
│   │   │   └─ ← [Return] 0x150b7a0200000000000000000000000000000000000000000000000000000000
│   │   └─ ← [Stop]
│   ├─ [630] MockERC721::balanceOf(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa]) [staticcall]
│   │   └─ ← [Return] 5
│   ├─ [0] console::log("NFT BALANCE:", 5) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [630] MockERC721::balanceOf(0x0000000000000000000000000000000000000001) [staticcall]
│   │   └─ ← [Return] 0
│   ├─ [0] console::log("SENDER BALANCE:", 0) [staticcall]
│   │   └─ ← [Stop]
│   ├─ [0] console::log("total eth value", 326399685636 [3.263e11]) [staticcall]
│   │   └─ ← [Stop]
│   └─ ← [Stop]
├─ [600] NFTAMMHook::makerBalances(0x0000000000000000000000000000000000000001) [staticcall]
│   └─ ← [Return] 326399685636 [3.263e11]
├─ [600] NFTAMMHook::makerBalances(0x0000000000000000000000000000000000000001) [staticcall]
│   └─ ← [Return] 326399685636 [3.263e11]
├─ [2899] PoolManager::getSlot0(0x0071d3ec715494cf489ab0d42d8242aff765e5bb1a7cb25d9f659cd9d8ad858b) [staticcall]
│   └─ ← [Return] 79228162514264337593543950336 [7.922e28], 0, 0, 3000
├─ [0] VM::prank(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa])
│   └─ ← [Return]
├─ [271145] PoolModifyLiquidityTest::modifyLiquidity{value: 1669}(PoolKey({ currency0: 0x0000000000000000000000000000000000000000, currency1: 0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa, fee: 3000, tickSpacing: 60, hooks: 0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa }), ModifyLiquidityParams({ tickLower: -60, tickUpper: 60, liquidityDelta: 1669 }), 0x)
│   ├─ [268085] PoolManager::lock(0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000033fb27d92de64da9ecee2ac46021fbd6b9b81fa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033fb27d92de64da9ecee2ac46021fbd6b9b81fa0000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000033fb27d92de64da9ecee2ac46021fbd6b9b81faffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc4000000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000006850000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000)
│   │   ├─ [266636] PoolModifyLiquidityTest::lockAcquired(0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000033fb27d92de64da9ecee2ac46021fbd6b9b81fa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033fb27d92de64da9ecee2ac46021fbd6b9b81fa0000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000033fb27d92de64da9ecee2ac46021fbd6b9b81faffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc4000000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000006850000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000)
│   │   │   ├─ [212615] PoolManager::modifyLiquidity(PoolKey({ currency0: 0x0000000000000000000000000000000000000000, currency1: 0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa, fee: 3000, tickSpacing: 60, hooks: 0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa }), ModifyLiquidityParams({ tickLower: -60, tickUpper: 60, liquidityDelta: 1669 }), 0x)
│   │   │   │   ├─ emit ModifyLiquidity(id: 0x0071d3ec715494cf489ab0d42d8242aff765e5bb1a7cb25d9f659cd9d8ad858b, sender: PoolModifyLiquidityTest: [0x08526067985167EcFcB1F9720C72DbBF36c96018], tickLower: -60, tickUpper: 60, liquidityDelta: 1669)
│   │   │   │   └─ ← [Return] -1361129467683753853853498429727072845829 [-1.361e39]
│   │   │   ├─ [2566] PoolManager::reservesOf(0x0000000000000000000000000000000000000000) [staticcall]
│   │   │   │   └─ ← [Return] 0
│   │   │   ├─ [805] PoolManager::currencyDelta(PoolModifyLiquidityTest: [0x08526067985167EcFcB1F9720C72DbBF36c96018], 0x0000000000000000000000000000000000000000) [staticcall]
│   │   │   │   └─ ← [Return] -5
│   │   │   ├─ [2599] NFTAMMHook::balanceOf(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa]) [staticcall]
│   │   │   │   └─ ← [Return] 100000000 [1e8]
│   │   │   ├─ [2599] NFTAMMHook::balanceOf(PoolManager: [0x2a9e8fa175F45b235efDdD97d2727741EF4Eee63]) [staticcall]
│   │   │   │   └─ ← [Return] 0
│   │   │   ├─ [2566] PoolManager::reservesOf(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa]) [staticcall]
│   │   │   │   └─ ← [Return] 0
│   │   │   ├─ [805] PoolManager::currencyDelta(PoolModifyLiquidityTest: [0x08526067985167EcFcB1F9720C72DbBF36c96018], NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa]) [staticcall]
│   │   │   │   └─ ← [Return] -5
│   │   │   ├─ [0] VM::assertLt(-5, 0) [staticcall]
│   │   │   │   └─ ← [Return]
│   │   │   ├─ [23716] PoolManager::settle{value: 5}(0x0000000000000000000000000000000000000000)
│   │   │   │   ├─ [0] console::log("RESERVES BEFORE", 0) [staticcall]
│   │   │   │   │   └─ ← [Stop]
│   │   │   │   ├─ [0] console::log("RESERVES OF", 5) [staticcall]
│   │   │   │   │   └─ ← [Stop]
│   │   │   │   └─ ← [Return] 5
│   │   │   ├─ [0] VM::assertLt(-5, 0) [staticcall]
│   │   │   │   └─ ← [Return]
│   │   │   ├─ [2854] NFTAMMHook::transferFrom(NFTAMMHook: [0x033fB27d92De64da9eCee2ac46021fBd6b9B81fa], PoolManager: [0x2a9e8fa175F45b235efDdD97d2727741EF4Eee63], 5)
│   │   │   │   └─ ← [Revert] panic: arithmetic underflow or overflow (0x11)
│   │   │   └─ ← [Revert] panic: arithmetic underflow or overflow (0x11)
│   │   └─ ← [Revert] panic: arithmetic underflow or overflow (0x11)
│   └─ ← [Revert] panic: arithmetic underflow or overflow (0x11)
└─ ← [Revert] panic: arithmetic underflow or overflow (0x11)

